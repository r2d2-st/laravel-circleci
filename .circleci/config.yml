version: 2.1
jobs:

  # this should run for both env, it shouldn't matter, but it any case the jobs can become separate
  test-staging:
    docker:
      - image: circleci/php:7.3.3-fpm-node
      - image: circleci/mysql:8.0-ram
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing_db
    steps:
      - checkout
      - run:
          name: Setup required extensions and libraries
          command: |
            cp .env.testing .env;
            sudo apt update && sudo apt install -y mysql-client zlib1g-dev libsqlite3-dev;
            sudo docker-php-ext-install zip pdo pdo_mysql
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: Composer Install
          command: |
            composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: "Setup laravel database and run phpunit tests"
          command: |
            composer dump-autoload;
            php artisan key:generate;
            php artisan migrate --force;
            php artisan db:seed --force;
            ./vendor/bin/phpunit --log-junit ./tests/results.xml
      - store_test_results:
          path: tests

  test:
    docker:
      - image: circleci/php:7.3.3-fpm-node
    steps:
      - checkout
      - run: echo "Implement testing for production"

  build:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: echo "Running production env"

  build-staging:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - run: echo "Running staging env"

workflows:
  version: 2
  main:
    jobs:
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test-staging:
          requires:
            - build-staging
          filters:
            branches:
              only: staging
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-staging:
          filters:
            branches:
              only: staging
